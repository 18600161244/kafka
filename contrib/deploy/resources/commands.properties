# This file contains a list of named command-line commands that are executed
# after substituting the appropriate dynamic values.
#
# Valid variables are:
# 
#     hostName               External host name of remote host
#     hostUserId             User ID for remote host
#     sshPrivateKey          Local path to SSH private key to use to connect
#     kafkaRootDirectory     Relative directory on remote host which points 
#                            to the Kafka distribution
#     kafkaBrokerConfig      Path to the config property file on the remote host
#     kafkaLogDirectory	     Path to the log directory
#     kafkaBrokerId 	     Broker Id
#     sourceDirectory        Local path which points to the Kafka 
#                            distribution; this is copied to
#                            {kafkaParentDirectory}
#     parameters	     The following params are used to run the remote class
#     className              The name of the class to run remotely
#     enableZk               To ZK or not to ZK?
#     zkConnect		     Comma separated host:port zk servers
#     zkConfig		     ZK Configuration file
#     zkPort		     Port on which zk listens
#     zkNodeId               Node id of zookeeper
#     zkDataDir		     Data directory of ZK where snapshot is stored
RsyncDeployer.rsync=rsync -vazc --delete --progress --exclude=.git --exclude=.svn --exclude=src  --exclude=contrib  --exclude=test  --exclude=docs \
                    -e "ssh -o StrictHostKeyChecking=no -i {sshPrivateKey}" \
                    {sourceDirectory} {hostUserId}@{hostName}:{kafkaRootDirectory}

RsyncDeployer.rsync.nokey=rsync -vazc --delete --progress --exclude=.git --exclude=.svn --exclude=src --exclude=contrib --exclude=test --exclude=docs \
                          -e "ssh -o StrictHostKeyChecking=no" \
                          {sourceDirectory} {hostUserId}@{hostName}:{kafkaRootDirectory}

SshBrokerCleaner.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                     "rm -rf {kafkaLogDirectory} "
								  
SshBrokerCleaner.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
                           "rm -rf {kafkaLogDirectory} "
								  
SshBrokerStarter.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                      "export KAFKA_HOME=$(pwd)/{kafkaRootDirectory} ; \
                      mv {kafkaBrokerConfig} {kafkaBrokerConfig}.bak ; \
                      cat {kafkaBrokerConfig}.bak | grep -v "^brokerid=" | grep -v "^log.dir=" | grep -v "^enable.zookeeper=" | grep -v "^zk.connect=" > {kafkaBrokerConfig} ; \
                      echo "brokerid={kafkaBrokerId}" >> {kafkaBrokerConfig} ; \
  		      echo "log.dir={kafkaLogDirectory}" >> {kafkaBrokerConfig} ; \
  		      echo "enable.zookeeper={enableZk}" >> {kafkaBrokerConfig} ; \
                      echo "zk.connect={zkConnect}" >> {kafkaBrokerConfig} ; \
   		      cd $KAFKA_HOME ; \
                      bin/kafka-server-start.sh ~/{kafkaBrokerConfig}"
								  
SshBrokerStarter.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
  		      "export KAFKA_HOME=$(pwd)/{kafkaRootDirectory} ; \
                      mv {kafkaBrokerConfig} {kafkaBrokerConfig}.bak ; \
                      cat {kafkaBrokerConfig}.bak | grep -v "^brokerid=" | grep -v "^log.dir=" | grep -v "^enable.zookeeper=" | grep -v "^zk.connect=" > {kafkaBrokerConfig} ; \
                      echo "brokerid={kafkaBrokerId}" >> {kafkaBrokerConfig} ; \
                      echo "log.dir={kafkaLogDirectory}" >> {kafkaBrokerConfig} ; \
  		      echo "enable.zookeeper={enableZk}" >> {kafkaBrokerConfig} ; \
                      echo "zk.connect={zkConnect}" >> {kafkaBrokerConfig} ; \
   		      cd $KAFKA_HOME ; \
                      bin/kafka-server-start.sh ~/{kafkaBrokerConfig}"
								  
SshZkStarter.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                      "mv {zkConfig} {zkConfig}.bak ; \
                      cat {zkConfig}.bak | grep -v "^clientPort=" | grep -v "^server." | grep -v "^dataDir=" > {zkConfig} ; \
                      echo "clientPort={zkPort}" >> {zkConfig} ; \
                      echo "dataDir=$(pwd)/{zkDataDir}" >> {zkConfig} ; \
                      mkdir {zkDataDir} ; \
                      echo "initLimit=5" >> {zkConfig} ; \
                      echo "syncLimit=2" >> {zkConfig} ; \
                      echo "{zkNodeId}" >> {zkDataDir}/myid ; 
                      
SshZkStarter.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
                      "mv {zkConfig} {zkConfig}.bak ; \
                      cat {zkConfig}.bak | grep -v "^clientPort=" | grep -v "^server." | grep -v "^dataDir=" > {zkConfig} ; \
                      echo "clientPort={zkPort}" >> {zkConfig} ; \
                      echo "dataDir=$(pwd)/{zkDataDir}" >> {zkConfig} ; \
                      mkdir {zkDataDir} ; \
                      echo "initLimit=5" >> {zkConfig} ; \
                      echo "syncLimit=2" >> {zkConfig} ; \
                      echo "{zkNodeId}" >> {zkDataDir}/myid ; 

SshZkStarterMid=echo "server.{zkNodeId}={hostName}:2888:3888" >> {zkConfig} ;

SshZkStarterEnd=cd $(pwd)/{kafkaRootDirectory} ; \
                bin/zookeeper-server-start.sh ~/{zkConfig}"

SshZkStopper.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                 "cd {kafkaRootDirectory} ; ./bin/zookeeper-server-stop.sh"

SshZkStopper.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
                 "cd {kafkaRootDirectory} ; ./bin/zookeeper-server-stop.sh"

SshBrokerStopper.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                      "cd {kafkaRootDirectory} ; ./bin/kafka-server-stop.sh"

SshBrokerStopper.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
                      "cd {kafkaRootDirectory} ; ./bin/kafka-server-stop.sh"

SshRunner.ssh=ssh -o StrictHostKeyChecking=no -i {sshPrivateKey} {hostUserId}@{hostName} \
                      "cd {kafkaRootDirectory} ; ./bin/kafka-run-class.sh {className} {parameters}"

SshRunner.ssh.nokey=ssh -o StrictHostKeyChecking=no {hostUserId}@{hostName} \
                      "cd {kafkaRootDirectory} ; ./bin/kafka-run-class.sh {className} {parameters}"
